

# This file was generated by zbuildgen. Don't edit this file! Edit "Factory.make.zbuild" instead.


SOLUTIONDIR ?= $(CURDIR)

ifeq ($(CONFIG),Debug)

PROJECTNAME := Factory
CONFIG := Debug
OUTDIR := $(SOLUTIONDIR)/../Build/Factory/Linux/$(CONFIG)
INTDIR := $(SOLUTIONDIR)/../Build/Factory/Linux/$(CONFIG)
TARGET := $(OUTDIR)/libFactory.so
OBJECTS := \
	$(INTDIR)/FactoryController.o\

PCHOBJECT := 
CUSTOMOBJECTS := \

DEPENDENCIES := 

DEFINES := -D"QT_NO_DEBUG" -D"QT_SHARED" -D"QT_CORE_LIB" -D"LINUX" -D"_DEBUG"
INCPATHS := -I"$(INTDIR)" -I"../Src/SimRobotCore2" -I"../Util/glew/Linux/include" -I"/usr/include/qt4" -I"/usr/include/qt4/QtCore"
LIBPATHS := -L"../Util/glew/Linux/lib"
LIBS := -lrt -lpthread -lGLEW -lQtCore -lGLU -lGL

BUILDFLAGS := -MMD $(DEFINES) $(INCPATHS)   -fpic -pipe -Wall -Wno-strict-aliasing -Wno-non-virtual-dtor -Wno-deprecated -Wno-ignored-qualifiers -g
LINKFLAGS :=  -shared -fpic  $(LIBPATHS) $(LIBS)

.PHONY: all prebuild clean dist distclean

all: $(TARGET)

$(TARGET): $(OBJECTS) $(CUSTOMOBJECTS) $(DEPENDENCIES)
	@echo Linking...
	@$(CXX) -o $@ $(OBJECTS) $(LDFLAGS) $(LINKFLAGS) 

$(INTDIR)/FactoryController.o: ../Src/Controllers/FactoryController.cpp  | prebuild
	@echo "FactoryController.cpp"
	@$(CXX) $(CXXFLAGS) $(BUILDFLAGS) -o $@ -c $<

$(INTDIR):
	@mkdir -p $(INTDIR)

ifneq ($(INTDIR),$(OUTDIR))
$(OUTDIR):
	@mkdir -p $(OUTDIR)
endif

prebuild: $(INTDIR) $(OUTDIR)
	@echo "------ Building $(PROJECTNAME) ($(CONFIG)) ------"

clean:
	@echo "------ Cleaning $(PROJECTNAME) ($(CONFIG)) ------"
	@echo Cleaning...
	-@rm -rf $(OBJECTS) $(PCHOBJECT) $(CUSTOMOBJECTS) $(TARGET) $(OBJECTS:%.o=%.d) $(PCHOBJECT:%.gch=%.d)

-include $(OBJECTS:%.o=%.d)

else

PROJECTNAME := Factory
CONFIG := Release
OUTDIR := $(SOLUTIONDIR)/../Build/Factory/Linux/$(CONFIG)
INTDIR := $(SOLUTIONDIR)/../Build/Factory/Linux/$(CONFIG)
TARGET := $(OUTDIR)/libFactory.so
OBJECTS := \
	$(INTDIR)/FactoryController.o\

PCHOBJECT := 
CUSTOMOBJECTS := \

DEPENDENCIES := 

DEFINES := -D"QT_NO_DEBUG" -D"QT_SHARED" -D"QT_CORE_LIB" -D"LINUX" -D"NDEBUG"
INCPATHS := -I"$(INTDIR)" -I"../Src/SimRobotCore2" -I"../Util/glew/Linux/include" -I"/usr/include/qt4" -I"/usr/include/qt4/QtCore"
LIBPATHS := -L"../Util/glew/Linux/lib"
LIBS := -lrt -lpthread -lGLEW -lQtCore -lGLU -lGL

BUILDFLAGS := -MMD $(DEFINES) $(INCPATHS)   -fpic -pipe -Wall -Wno-strict-aliasing -Wno-non-virtual-dtor -Wno-deprecated -Wno-ignored-qualifiers -Wno-unused -O3 -fomit-frame-pointer
LINKFLAGS :=  -shared -fpic -s $(LIBPATHS) $(LIBS)

.PHONY: all prebuild clean dist distclean

all: $(TARGET)

$(TARGET): $(OBJECTS) $(CUSTOMOBJECTS) $(DEPENDENCIES)
	@echo Linking...
	@$(CXX) -o $@ $(OBJECTS) $(LDFLAGS) $(LINKFLAGS) 

$(INTDIR)/FactoryController.o: ../Src/Controllers/FactoryController.cpp  | prebuild
	@echo "FactoryController.cpp"
	@$(CXX) $(CXXFLAGS) $(BUILDFLAGS) -o $@ -c $<

$(INTDIR):
	@mkdir -p $(INTDIR)

ifneq ($(INTDIR),$(OUTDIR))
$(OUTDIR):
	@mkdir -p $(OUTDIR)
endif

prebuild: $(INTDIR) $(OUTDIR)
	@echo "------ Building $(PROJECTNAME) ($(CONFIG)) ------"

clean:
	@echo "------ Cleaning $(PROJECTNAME) ($(CONFIG)) ------"
	@echo Cleaning...
	-@rm -rf $(OBJECTS) $(PCHOBJECT) $(CUSTOMOBJECTS) $(TARGET) $(OBJECTS:%.o=%.d) $(PCHOBJECT:%.gch=%.d)

-include $(OBJECTS:%.o=%.d)

endif

%.h: ;
%.hh: ;
%.hxx: ;
%.hpp: ;
%.c: ;
%.cc: ;
%.cxx: ;
%.cpp: ;
%.d: ;

dist: ;

distclean: ;

